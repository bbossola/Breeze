service: swift-breeze-rest-item-api
frameworkVersion: '3'
configValidationMode: warn
useDotenv: false
provider:
  name: aws
  region: us-east-1
  disableRollback: false
  runtime: provided.al2
  httpApi:
    payload: '2.0'
    cors: true
  architecture: arm64
  environment:
    DYNAMO_DB_TABLE_NAME: ${self:custom.tableName}
    DYNAMO_DB_KEY: ${self:custom.keyName}
  versionFunctions: true
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
        Resource: '*'
      - Effect: Allow
        Action:
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:DescribeTable
        Resource:
        - Fn::GetAtt:
          - ItemAPITable
          - Arn
package:
  artifact: build/ItemAPI/ItemAPI.zip
custom:
  tableName: items-table-${sls:stage}
  keyName: itemKey
functions:
  updateItemAPI:
    handler: update
    memorySize: 256
    description: '[${sls:stage}] put /items'
    events:
    - httpApi:
        path: /items
        method: put
  deleteItemAPI:
    handler: delete
    memorySize: 256
    description: '[${sls:stage}] delete /items/{itemKey}'
    events:
    - httpApi:
        path: /items/{itemKey}
        method: delete
  createItemAPI:
    handler: create
    memorySize: 256
    description: '[${sls:stage}] post /items'
    events:
    - httpApi:
        path: /items
        method: post
  readItemAPI:
    handler: read
    memorySize: 256
    description: '[${sls:stage}] get /items/{itemKey}'
    events:
    - httpApi:
        path: /items/{itemKey}
        method: get
  listItemAPI:
    handler: list
    memorySize: 256
    description: '[${sls:stage}] get /items'
    events:
    - httpApi:
        path: /items
        method: get
resources:
  Resources:
    ItemAPITable:
      Properties:
        AttributeDefinitions:
        - AttributeName: ${self:custom.keyName}
          AttributeType: S
        KeySchema:
        - AttributeName: ${self:custom.keyName}
          KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
      Type: AWS::DynamoDB::Table
